# Return data
data=try(Noble::data.pull(site = site, dpID = "DP1.00001.001", bgn.month = bgn.month, end.month = end.month, time.agr = 30, package="basic", save.dir = tempdir()))
if(class(data)=="try-error"){
plot=ggplot2::ggplot(data.frame()) + ggplot2::geom_point() + ggplot2::ggtitle(label = paste0(site, " wind data from ", bgn.month, " through ", end.month), subtitle = "NO DATA")
print(plot)
}else if(!class(data)=="try-error"){
# Break out what MLs were returned
temp<-(strsplit(colnames(data[,3:length(colnames(data))]), split = "\\."))
temp=do.call(rbind, temp)
#temp<-data.frame(temp[-1], stringsAsFactors=F)
#temp<-unlist((temp[3,]))
mls<-unique(temp[,3])
clean.mls<-paste0("ML-", gsub(x=mls, pattern = "0", replacement = ""))
# Build a DF of relevant data and MLS associated
all<-NULL
for(n in 1:length(mls)){
data.by.ml<- data[,c(1,which(grepl(colnames(data), pattern=mls[n])))]
dir.indx<- as.numeric(grep(x=colnames(data.by.ml), pattern = "windDirMean", ignore.case = T))
dir.qf.index = as.numeric(grep(x=colnames(data.by.ml), pattern = "windDirFinalQF\\.", ignore.case = T))
speed.indx <- as.numeric(grep(x=colnames(data.by.ml), pattern = "windSpeedMean", ignore.case = T))
if(length(speed.indx)==0){stop("No wind data found!")}
direct<-data.by.ml[,dir.indx]
speed<-data.by.ml[,speed.indx]
qf=paste0("QF=",data.by.ml[,dir.qf.index])
temp.df<-data.frame(Date=data[,1], "Dir"=as.numeric(direct), "Speed"=as.numeric(speed), "QualityFlag"=qf, "ML"=rep(clean.mls[n], length(direct)), QF=qf)
temp.df<-temp.df[temp.df$Dir>=0,]
temp.df=temp.df[temp.df$Speed>0.5,]
all<-rbind(all, temp.df)
}
#Factor by season
all$Season[lubridate::month(all$Date) %in% seasons$winter]="Winter"
all$Season[lubridate::month(all$Date) %in% seasons$summer]="Summer"
all$Season[lubridate::month(all$Date) %in% seasons$spring]="Spring"
all$Season[lubridate::month(all$Date) %in% seasons$fall]="Fall"
# unlist(lapply(all$Date, function(d) paste0("-", lubridate::month(d), "-"))) %>%
#     gsub(pattern = "-1-|-2-|-3-", replacement = "Winter") %>%
#     gsub(pattern = "-4-|-5-|-6-", replacement = "Spring") %>%
#     gsub(pattern = "-7-|-8-|-9-", replacement = "Summer") %>%
#     gsub(pattern = "-10-|-11-|-12-", replacement = "Fall")-> all$Season
all=all[!is.null(all),]
all=all[!is.na(all),]
all$Season=factor(x = all$Season, levels = c("Winter", "Spring", "Summer", "Fall"))
if(as.character(qf.plot)=="0"){
all=all[all$QF==0,]
}
if(as.character(qf.plot)=="1"){
all=all[all$QF==1,]
}
# Set up output parameters for plot
degreeSteps<-as.numeric(360/dir.bins)
dir.bin.seq<-seq(0, 360, by=360/dir.bins)
all.binned<-cbind(all, SpeedCut= cut(as.numeric(all$Speed), breaks = speed.bins, ordered_result = TRUE), DirCut= cut(as.numeric(all$Dir), breaks = dir.bin.seq))
all.binned<-stats::na.omit(all.binned)
all.binned$SpeedCut=factor(all.binned$SpeedCut, levels =  rev(levels(all.binned$SpeedCut)))
#all.binned=all.binned[order(all.binned$SpeedCut, decreasing = T),]
# Make labels and title
bgnLabels<- unique((dir.bin.seq-(degreeSteps/2))%%360)
endLabels<- unique((dir.bin.seq+(degreeSteps/2))%%360)
dirLabels<-paste0(bgnLabels, "-", endLabels)
titleString =paste0(site, " wind data from ", bgn.month, " through ", end.month)
degreeLabels=endLabels
degreeLabels[gtools::odd(1:36)]=""
#Make and prettify the plot
plot=ggplot2::ggplot(data = all.binned, ggplot2::aes(x=DirCut, fill=SpeedCut, colors=factor(SpeedCut)))+
ggplot2::geom_bar(width = .95, show.legend = T)+
ggplot2::theme_linedraw()+
ggplot2::theme_light()+
ggplot2::coord_polar(theta = "x", start = 0)+
ggplot2::theme(legend.position="bottom", legend.title.align = (0.5), axis.text.x = ggplot2::element_text(angle=(85-(c(0:35)*(90/9)) %% 180)))+
ggplot2::xlab("")+
ggplot2::ylab("Count")+
ggplot2::labs(title=titleString)+
ggplot2::scale_x_discrete(labels=degreeLabels)+
ggplot2::scale_fill_discrete(h = c(0, 240), l=65, c=100, name="Wind Speed (m/s)")+
ggplot2::facet_grid(ML~Season, switch = "y")
if(as.character(qf.plot)=="0"){
plot=plot+ggplot2::ggtitle(label = titleString, subtitle = "Only showing records where QF=0")
}
if(as.character(qf.plot)=="1"){
plot=plot+ggplot2::ggtitle(label = titleString, subtitle = "Only showing records where QF=1")
}
print(plot)
}
for(s in 1:length(sites)){
site=sites[s]
# Return data
data=try(Noble::data.pull(site = site, dpID = "DP1.00001.001", bgn.month = bgn.month, end.month = end.month, time.agr = 30, package="basic", save.dir = tempdir()))
if(class(data)=="try-error"){
plot=ggplot2::ggplot(data.frame()) + ggplot2::geom_point() + ggplot2::ggtitle(label = paste0(site, " wind data from ", bgn.month, " through ", end.month), subtitle = "NO DATA")
print(plot)
}else if(!class(data)=="try-error"){
# Break out what MLs were returned
temp<-(strsplit(colnames(data[,3:length(colnames(data))]), split = "\\."))
temp=do.call(rbind, temp)
#temp<-data.frame(temp[-1], stringsAsFactors=F)
#temp<-unlist((temp[3,]))
mls<-unique(temp[,3])
clean.mls<-paste0("ML-", gsub(x=mls, pattern = "0", replacement = ""))
# Build a DF of relevant data and MLS associated
all<-NULL
for(n in 1:length(mls)){
data.by.ml<- data[,c(1,which(grepl(colnames(data), pattern=mls[n])))]
dir.indx<- as.numeric(grep(x=colnames(data.by.ml), pattern = "windDirMean", ignore.case = T))
dir.qf.index = as.numeric(grep(x=colnames(data.by.ml), pattern = "windDirFinalQF\\.", ignore.case = T))
speed.indx <- as.numeric(grep(x=colnames(data.by.ml), pattern = "windSpeedMean", ignore.case = T))
if(length(speed.indx)==0){stop("No wind data found!")}
direct<-data.by.ml[,dir.indx]
speed<-data.by.ml[,speed.indx]
qf=paste0("QF=",data.by.ml[,dir.qf.index])
temp.df<-data.frame(Date=data[,1], "Dir"=as.numeric(direct), "Speed"=as.numeric(speed), "QualityFlag"=qf, "ML"=rep(clean.mls[n], length(direct)), QF=qf)
temp.df<-temp.df[temp.df$Dir>=0,]
temp.df=temp.df[temp.df$Speed>0.5,]
all<-rbind(all, temp.df)
}
#Factor by season
all$Season[lubridate::month(all$Date) %in% seasons$winter]="Winter"
all$Season[lubridate::month(all$Date) %in% seasons$summer]="Summer"
all$Season[lubridate::month(all$Date) %in% seasons$spring]="Spring"
all$Season[lubridate::month(all$Date) %in% seasons$fall]="Fall"
# unlist(lapply(all$Date, function(d) paste0("-", lubridate::month(d), "-"))) %>%
#     gsub(pattern = "-1-|-2-|-3-", replacement = "Winter") %>%
#     gsub(pattern = "-4-|-5-|-6-", replacement = "Spring") %>%
#     gsub(pattern = "-7-|-8-|-9-", replacement = "Summer") %>%
#     gsub(pattern = "-10-|-11-|-12-", replacement = "Fall")-> all$Season
all=all[!is.null(all),]
all=all[!is.na(all),]
all$Season=factor(x = all$Season, levels = c("Winter", "Spring", "Summer", "Fall"))
if(as.character(qf.plot)=="0"){
all=all[all$QF==0,]
}
if(as.character(qf.plot)=="1"){
all=all[all$QF==1,]
}
# Set up output parameters for plot
degreeSteps<-as.numeric(360/dir.bins)
dir.bin.seq<-seq(0, 360, by=360/dir.bins)
all.binned<-cbind(all, SpeedCut= cut(as.numeric(all$Speed), breaks = speed.bins, ordered_result = TRUE), DirCut= cut(as.numeric(all$Dir), breaks = dir.bin.seq))
all.binned<-stats::na.omit(all.binned)
all.binned$SpeedCut=factor(all.binned$SpeedCut, levels =  rev(levels(all.binned$SpeedCut)))
#all.binned=all.binned[order(all.binned$SpeedCut, decreasing = T),]
# Make labels and title
bgnLabels<- unique((dir.bin.seq-(degreeSteps/2))%%360)
endLabels<- unique((dir.bin.seq+(degreeSteps/2))%%360)
dirLabels<-paste0(bgnLabels, "-", endLabels)
titleString =paste0(site, " wind data from ", bgn.month, " through ", end.month)
degreeLabels=endLabels
degreeLabels[gtools::odd(1:36)]=""
#Make and prettify the plot
plot=ggplot2::ggplot(data = all.binned, ggplot2::aes(x=DirCut, fill=SpeedCut, colors=factor(SpeedCut)))+
ggplot2::geom_bar(width = .95, show.legend = T)+
ggplot2::theme_linedraw()+
ggplot2::theme_light()+
ggplot2::coord_polar(theta = "x", start = 0)+
ggplot2::theme(legend.position="bottom", legend.title.align = (0.5), axis.text.x = ggplot2::element_text(angle=(85-(c(0:35)*(90/9)) %% 180)))+
ggplot2::xlab("")+
ggplot2::ylab("Count")+
ggplot2::labs(title=titleString)+
ggplot2::scale_x_discrete(labels=degreeLabels)+
ggplot2::scale_fill_discrete(h = c(0, 240), l=65, c=100, name="Wind Speed (m/s)")+
ggplot2::facet_grid(ML~Season, switch = "y")
if(as.character(qf.plot)=="0"){
plot=plot+ggplot2::ggtitle(label = titleString, subtitle = "Only showing records where QF=0")
}
if(as.character(qf.plot)=="1"){
plot=plot+ggplot2::ggtitle(label = titleString, subtitle = "Only showing records where QF=1")
}
print(plot)
}
}
site=sites[s]
# Return data
data=try(Noble::data.pull(site = site, dpID = "DP1.00001.001", bgn.month = bgn.month, end.month = end.month, time.agr = 30, package="basic", save.dir = tempdir()))
if(class(data)=="try-error"){
plot=ggplot2::ggplot(data.frame()) + ggplot2::geom_point() + ggplot2::ggtitle(label = paste0(site, " wind data from ", bgn.month, " through ", end.month), subtitle = "NO DATA")
print(plot)
}else if(!class(data)=="try-error"){
# Break out what MLs were returned
temp<-(strsplit(colnames(data[,3:length(colnames(data))]), split = "\\."))
temp=do.call(rbind, temp)
#temp<-data.frame(temp[-1], stringsAsFactors=F)
#temp<-unlist((temp[3,]))
mls<-unique(temp[,3])
clean.mls<-paste0("ML-", gsub(x=mls, pattern = "0", replacement = ""))
# Build a DF of relevant data and MLS associated
all<-NULL
for(n in 1:length(mls)){
data.by.ml<- data[,c(1,which(grepl(colnames(data), pattern=mls[n])))]
dir.indx<- as.numeric(grep(x=colnames(data.by.ml), pattern = "windDirMean", ignore.case = T))
dir.qf.index = as.numeric(grep(x=colnames(data.by.ml), pattern = "windDirFinalQF\\.", ignore.case = T))
speed.indx <- as.numeric(grep(x=colnames(data.by.ml), pattern = "windSpeedMean", ignore.case = T))
if(length(speed.indx)==0){stop("No wind data found!")}
direct<-data.by.ml[,dir.indx]
speed<-data.by.ml[,speed.indx]
qf=paste0("QF=",data.by.ml[,dir.qf.index])
temp.df<-data.frame(Date=data[,1], "Dir"=as.numeric(direct), "Speed"=as.numeric(speed), "QualityFlag"=qf, "ML"=rep(clean.mls[n], length(direct)), QF=qf)
temp.df<-temp.df[temp.df$Dir>=0,]
temp.df=temp.df[temp.df$Speed>0.5,]
all<-rbind(all, temp.df)
}
#Factor by season
all$Season[lubridate::month(all$Date) %in% seasons$winter]="Winter"
all$Season[lubridate::month(all$Date) %in% seasons$summer]="Summer"
all$Season[lubridate::month(all$Date) %in% seasons$spring]="Spring"
all$Season[lubridate::month(all$Date) %in% seasons$fall]="Fall"
# unlist(lapply(all$Date, function(d) paste0("-", lubridate::month(d), "-"))) %>%
#     gsub(pattern = "-1-|-2-|-3-", replacement = "Winter") %>%
#     gsub(pattern = "-4-|-5-|-6-", replacement = "Spring") %>%
#     gsub(pattern = "-7-|-8-|-9-", replacement = "Summer") %>%
#     gsub(pattern = "-10-|-11-|-12-", replacement = "Fall")-> all$Season
all=all[!is.null(all),]
all=all[!is.na(all),]
all$Season=factor(x = all$Season, levels = c("Winter", "Spring", "Summer", "Fall"))
if(as.character(qf.plot)=="0"){
all=all[all$QF==0,]
}
if(as.character(qf.plot)=="1"){
all=all[all$QF==1,]
}
# Set up output parameters for plot
degreeSteps<-as.numeric(360/dir.bins)
dir.bin.seq<-seq(0, 360, by=360/dir.bins)
all.binned<-cbind(all, SpeedCut= cut(as.numeric(all$Speed), breaks = speed.bins, ordered_result = TRUE), DirCut= cut(as.numeric(all$Dir), breaks = dir.bin.seq))
all.binned<-stats::na.omit(all.binned)
all.binned$SpeedCut=factor(all.binned$SpeedCut, levels =  rev(levels(all.binned$SpeedCut)))
#all.binned=all.binned[order(all.binned$SpeedCut, decreasing = T),]
# Make labels and title
bgnLabels<- unique((dir.bin.seq-(degreeSteps/2))%%360)
endLabels<- unique((dir.bin.seq+(degreeSteps/2))%%360)
dirLabels<-paste0(bgnLabels, "-", endLabels)
titleString =paste0(site, " wind data from ", bgn.month, " through ", end.month)
degreeLabels=endLabels
degreeLabels[gtools::odd(1:36)]=""
#Make and prettify the plot
plot=ggplot2::ggplot(data = all.binned, ggplot2::aes(x=DirCut, fill=SpeedCut, colors=factor(SpeedCut)))+
ggplot2::geom_bar(width = .95, show.legend = T)+
ggplot2::theme_linedraw()+
ggplot2::theme_light()+
ggplot2::coord_polar(theta = "x", start = 0)+
ggplot2::theme(legend.position="bottom", legend.title.align = (0.5), axis.text.x = ggplot2::element_text(angle=(85-(c(0:35)*(90/9)) %% 180)))+
ggplot2::xlab("")+
ggplot2::ylab("Count")+
ggplot2::labs(title=titleString)+
ggplot2::scale_x_discrete(labels=degreeLabels)+
ggplot2::scale_fill_discrete(h = c(0, 240), l=65, c=100, name="Wind Speed (m/s)")+
ggplot2::facet_grid(ML~Season, switch = "y")
if(as.character(qf.plot)=="0"){
plot=plot+ggplot2::ggtitle(label = titleString, subtitle = "Only showing records where QF=0")
}
if(as.character(qf.plot)=="1"){
plot=plot+ggplot2::ggtitle(label = titleString, subtitle = "Only showing records where QF=1")
}
print(plot)
}
plot=ggplot2::ggplot(data.frame()) + ggplot2::geom_point() + ggplot2::ggtitle(label = paste0(site, " wind data from ", bgn.month, " through ", end.month), subtitle = "NO DATA")
print(plot)
# Break out what MLs were returned
temp<-(strsplit(colnames(data[,3:length(colnames(data))]), split = "\\."))
temp=do.call(rbind, temp)
#temp<-data.frame(temp[-1], stringsAsFactors=F)
#temp<-unlist((temp[3,]))
mls<-unique(temp[,3])
clean.mls<-paste0("ML-", gsub(x=mls, pattern = "0", replacement = ""))
# Build a DF of relevant data and MLS associated
all<-NULL
for(n in 1:length(mls)){
data.by.ml<- data[,c(1,which(grepl(colnames(data), pattern=mls[n])))]
dir.indx<- as.numeric(grep(x=colnames(data.by.ml), pattern = "windDirMean", ignore.case = T))
dir.qf.index = as.numeric(grep(x=colnames(data.by.ml), pattern = "windDirFinalQF\\.", ignore.case = T))
speed.indx <- as.numeric(grep(x=colnames(data.by.ml), pattern = "windSpeedMean", ignore.case = T))
if(length(speed.indx)==0){stop("No wind data found!")}
direct<-data.by.ml[,dir.indx]
speed<-data.by.ml[,speed.indx]
qf=paste0("QF=",data.by.ml[,dir.qf.index])
temp.df<-data.frame(Date=data[,1], "Dir"=as.numeric(direct), "Speed"=as.numeric(speed), "QualityFlag"=qf, "ML"=rep(clean.mls[n], length(direct)), QF=qf)
temp.df<-temp.df[temp.df$Dir>=0,]
temp.df=temp.df[temp.df$Speed>0.5,]
all<-rbind(all, temp.df)
}
all$Season[lubridate::month(all$Date) %in% seasons$winter]="Winter"
all$Season[lubridate::month(all$Date) %in% seasons$summer]="Summer"
all$Season[lubridate::month(all$Date) %in% seasons$spring]="Spring"
all$Season[lubridate::month(all$Date) %in% seasons$fall]="Fall"
all=all[!is.null(all),]
all=all[!is.na(all),]
all$Season=factor(x = all$Season, levels = c("Winter", "Spring", "Summer", "Fall"))
all
if(as.character(qf.plot)=="0"){
all=all[all$QF=="QF=0",]
}
if(as.character(qf.plot)=="1"){
all=all[all$QF=="QF=1",]
}
# Set up output parameters for plot
degreeSteps<-as.numeric(360/dir.bins)
dir.bin.seq<-seq(0, 360, by=360/dir.bins)
all.binned<-cbind(all, SpeedCut= cut(as.numeric(all$Speed), breaks = speed.bins, ordered_result = TRUE), DirCut= cut(as.numeric(all$Dir), breaks = dir.bin.seq))
all.binned<-stats::na.omit(all.binned)
all.binned$SpeedCut=factor(all.binned$SpeedCut, levels =  rev(levels(all.binned$SpeedCut)))
# Make labels and title
bgnLabels<- unique((dir.bin.seq-(degreeSteps/2))%%360)
endLabels<- unique((dir.bin.seq+(degreeSteps/2))%%360)
dirLabels<-paste0(bgnLabels, "-", endLabels)
titleString =paste0(site, " wind data from ", bgn.month, " through ", end.month)
degreeLabels=endLabels
degreeLabels[gtools::odd(1:36)]=""
#Make and prettify the plot
plot=ggplot2::ggplot(data = all.binned, ggplot2::aes(x=DirCut, fill=SpeedCut, colors=factor(SpeedCut)))+
ggplot2::geom_bar(width = .95, show.legend = T)+
ggplot2::theme_linedraw()+
ggplot2::theme_light()+
ggplot2::coord_polar(theta = "x", start = 0)+
ggplot2::theme(legend.position="bottom", legend.title.align = (0.5), axis.text.x = ggplot2::element_text(angle=(85-(c(0:35)*(90/9)) %% 180)))+
ggplot2::xlab("")+
ggplot2::ylab("Count")+
ggplot2::labs(title=titleString)+
ggplot2::scale_x_discrete(labels=degreeLabels)+
ggplot2::scale_fill_discrete(h = c(0, 240), l=65, c=100, name="Wind Speed (m/s)")+
ggplot2::facet_grid(ML~Season, switch = "y")
if(as.character(qf.plot)=="0"){
plot=plot+ggplot2::ggtitle(label = titleString, subtitle = "Only showing records where QF=0")
}
if(as.character(qf.plot)=="1"){
plot=plot+ggplot2::ggtitle(label = titleString, subtitle = "Only showing records where QF=1")
}
plot
print(plot)
dev.off
dev.off()
source('~/GitHub/Noble/Noble/R/wind_rose_report.R')
wind.rose.report(sites = "CPER", bgn.month = "2017-10", end.month = "2018-09", min.speed = 1,save.dir = "~/GitHub", qf.plot = 1)
source('~/GitHub/Noble/Noble/R/wind_rose_report.R')
wind.rose.report(sites = "CPER", bgn.month = "2017-10", end.month = "2018-09", min.speed = 1,save.dir = "~/GitHub", qf.plot = 1)
wind.rose.report(sites = "CPER", bgn.month = "2017-10", end.month = "2018-09", min.speed = 1,save.dir = "~/GitHub", qf.plot = "1")
source('~/GitHub/Noble/Noble/R/wind_rose_report.R')
library(Noble)
library(Noble)
sites
unlist(lapply(sites, function(s) Noble::tis_site_config$Domain[Noble::tis_site_config$SiteID==s]))
sites=c("HARV", "OSBS", "DEJU")
unlist(lapply(sites, function(s) Noble::tis_site_config$Domain[Noble::tis_site_config$SiteID==s]))
sites=c("HARV", "OSBS", "DEJU", "HEAL", "JERC")
unlist(lapply(sites, function(s) Noble::tis_site_config$Domain[Noble::tis_site_config$SiteID==s]))
order(unlist(lapply(sites, function(s) Noble::tis_site_config$Domain[Noble::tis_site_config$SiteID==s])))
sites[order(unlist(lapply(sites, function(s) Noble::tis_site_config$Domain[Noble::tis_site_config$SiteID==s])))]
sites=sites[order(unlist(lapply(sites, function(s) Noble::tis_site_config$Domain[Noble::tis_site_config$SiteID==s])))]
source('~/GitHub/Noble/Noble/R/wind_rose_report.R')
class(data)
# Break out what MLs were returned
temp<-(strsplit(colnames(data[,3:length(colnames(data))]), split = "\\."))
temp=do.call(rbind, temp)
#temp<-data.frame(temp[-1], stringsAsFactors=F)
#temp<-unlist((temp[3,]))
mls<-unique(temp[,3])
clean.mls<-paste0("ML-", gsub(x=mls, pattern = "0", replacement = ""))
# Build a DF of relevant data and MLS associated
all<-NULL
for(n in 1:length(mls)){
data.by.ml<- data[,c(1,which(grepl(colnames(data), pattern=mls[n])))]
dir.indx<- as.numeric(grep(x=colnames(data.by.ml), pattern = "windDirMean", ignore.case = T))
dir.qf.index = as.numeric(grep(x=colnames(data.by.ml), pattern = "windDirFinalQF\\.", ignore.case = T))
speed.indx <- as.numeric(grep(x=colnames(data.by.ml), pattern = "windSpeedMean", ignore.case = T))
if(length(speed.indx)==0){stop("No wind data found!")}
direct<-data.by.ml[,dir.indx]
speed<-data.by.ml[,speed.indx]
qf=paste0("QF=",data.by.ml[,dir.qf.index])
temp.df<-data.frame(Date=data[,1], "Dir"=as.numeric(direct), "Speed"=as.numeric(speed), "QualityFlag"=qf, "ML"=rep(clean.mls[n], length(direct)))
temp.df<-temp.df[temp.df$Dir>=0,]
temp.df=temp.df[temp.df$Speed>0.5,]
all<-rbind(all, temp.df)
}
all$Season[lubridate::month(all$Date) %in% seasons$winter]="Winter"
all$Season[lubridate::month(all$Date) %in% seasons$summer]="Summer"
all$Season[lubridate::month(all$Date) %in% seasons$spring]="Spring"
all$Season[lubridate::month(all$Date) %in% seasons$fall]="Fall"
all=all[!is.null(all),]
all=all[!is.na(all),]
all$Season=factor(x = all$Season, levels = c("Winter", "Spring", "Summer", "Fall"))
as.character(qf.plot)=="0"
colnames(all)
if(as.character(qf.plot)=="0"){
all=all[all$QualityFlag=="QF=0",]
}
if(as.character(qf.plot)=="1"){
all=all[all$QualityFlag=="QF=1",]
}
# Set up output parameters for plot
degreeSteps<-as.numeric(360/dir.bins)
dir.bin.seq<-seq(0, 360, by=360/dir.bins)
all.binned<-cbind(all, SpeedCut= cut(as.numeric(all$Speed), breaks = speed.bins, ordered_result = TRUE), DirCut= cut(as.numeric(all$Dir), breaks = dir.bin.seq))
all.binned<-stats::na.omit(all.binned)
all.binned$SpeedCut=factor(all.binned$SpeedCut, levels =  rev(levels(all.binned$SpeedCut)))
# Make labels and title
bgnLabels<- unique((dir.bin.seq-(degreeSteps/2))%%360)
endLabels<- unique((dir.bin.seq+(degreeSteps/2))%%360)
dirLabels<-paste0(bgnLabels, "-", endLabels)
titleString =paste0(domain, "-", site, " wind data from ", bgn.month, " through ", end.month)
degreeLabels=endLabels
degreeLabels[gtools::odd(1:36)]=""
#Make and prettify the plot
plot=ggplot2::ggplot(data = all.binned, ggplot2::aes(x=DirCut, fill=SpeedCut, colors=factor(SpeedCut)))+
ggplot2::geom_bar(width = .95, show.legend = T)+
ggplot2::theme_linedraw()+
ggplot2::theme_light()+
ggplot2::coord_polar(theta = "x", start = 0)+
ggplot2::theme(legend.position="bottom", legend.title.align = (0.5), axis.text.x = ggplot2::element_text(angle=(85-(c(0:35)*(90/9)) %% 180)))+
ggplot2::xlab("")+
ggplot2::ylab("Count")+
ggplot2::labs(title=titleString)+
ggplot2::scale_x_discrete(labels=degreeLabels)+
ggplot2::scale_fill_discrete(h = c(0, 240), l=65, c=100, name="Wind Speed (m/s)")+
ggplot2::facet_grid(ML~Season, switch = "y")
if(as.character(qf.plot)=="0"){
plot=plot+ggplot2::ggtitle(label = titleString, subtitle = "Only showing records where QF=0")
}
if(as.character(qf.plot)=="1"){
plot=plot+ggplot2::ggtitle(label = titleString, subtitle = "Only showing records where QF=1")
}
print(plot)
dev.off()
source('~/GitHub/Noble/Noble/R/wind_rose_report.R')
library(Noble)
cper=Z10::get.data(dp.id = "DP1.00001.001", site = "CPER", month = "2018-10", package = "expanded")
cper
View(cper$`NEON.D10.CPER.DP1.00001.001.000.030.030.2DWSD_30min.2018-10.expanded.20181112T181845Z.csv`)
cper=Z10::get.data(dp.id = "DP1.00001.001", site = "SUGG", month = "2018-10", package = "expanded")
View(cper$`NEON.D03.SUGG.DP1.00001.001.200.000.030.2DWSD_30min.2018-10.expanded.20181113T113206Z.csv`)
Noble::parse.results("/Volumes/neon/Science/Science Commissioning Archive/SiteAndPayload/Tis2DWindSpeedDataQuality/Common/results.csv")
Noble::parse.results("/Volumes/neon/Science/Science Commissioning Archive/SiteAndPayload/Tis2DWindSpeedDataQuality/Common/")
Noble::parse.results(test.dir = ""/Volumes/neon/Science/Science Commissioning Archive/SiteAndPayload/Tis2DWindSpeedDataQuality/", write.summary=T)
Noble::parse.results(test.dir = "/Volumes/neon/Science/Science Commissioning Archive/SiteAndPayload/Tis2DWindSpeedDataQuality/", write.summary=T)
read.csv("~/Vol")
read.csv("/Volumes/neon/Science/Science Commissioning Archive/SiteAndPayload/Tis2DWindSpeedDataQuality/Common/results.csv")
base.dir="/Volumes/neon/Science/Science Commissioning Archive/SiteAndPayload/"
pq.dirs=list.dirs(path=base.dir, full.names = T)
pq.dirs=list.dirs(path=base.dir, full.names = T)
read.csv(file="/Volumes/neon/Science/Science Commissioning Archive/SiteAndPayload/Tis2DWindSpeedProcessQuality/Common/summary_results.csv")
test=read.csv(file="/Volumes/neon/Science/Science Commissioning Archive/SiteAndPayload/Tis2DWindSpeedProcessQuality/Common/summary_results.csv")
library(ggplot2)
test$test="2D wind speed and direction"
ggplot(data=test, aes(x=site, y=test, color=as.factor(passed)))
ggplot(data=test, aes(x=site, y=test, color=as.factor(passed)))+geom_point()
Noble::parse.results("/Volumes/neon/Science/Science Commissioning Archive/SiteAndPayload/TisPrecipitationProcessQuality//")
Noble::parse.results("/Volumes/neon/Science/Science Commissioning Archive/SiteAndPayload/TisSoilTemperatureProcessQuality/")
read.csv(file="~/Desktop/pq_tests/all_tests.csv", stringsAsFactors = F)
test=read.csv(file="~/Desktop/pq_tests/all_tests.csv", stringsAsFactors = F)
ggplot(data=test, aes(x=site, y=test, color=as.factor(passed)))+geom_point()
ggplot(data=test, aes(x=site, y=test, color=as.factor(passed)))+geom_area()
ggplot(data=test, aes(x=site, y=test, color=as.factor(passed)))+geom_bin2d()
ggplot(data=test, aes(x=site, y=test, color=as.factor(passed)))+geom_dotplot()
ggplot(data=test, aes(x=site, y=test, color=as.factor(passed)))+geom_hex()
ggplot(data=test, aes(x=site, y=test, color=as.factor(passed)))+geom_polygon()
ggplot(data=test, aes(x=site, y=test, color=as.factor(passed)))+geom_rect()
ggplot(data=test, aes(x=site, y=test, color=as.factor(passed)))+geom_ribbon()
ggplot(data=test, aes(x=site, y=test, color=as.factor(passed)))+geom_spoke()
ggplot(data=test, aes(x=site, y=test, color=as.factor(passed)))+geom_tile()
ggplot(data=test, aes(x=site, y=test, fill=as.factor(passed)))+geom_tile()
ggplot(data=test, aes(x=site, y=test, fill=as.factor(passed)))+geom_tile()+scale_fill_manual(c("purple", "tangerine"))
ggplot(data=test, aes(x=site, y=test, fill=as.factor(passed)))+geom_tile()+scale_fill_manual(values = c("purple", "tangerine"))
colors()
ggplot(data=test, aes(x=site, y=test, fill=as.factor(passed)))+geom_tile()+scale_fill_manual(values = c("purple", "orangered"))
ggplot(data=test, aes(x=site, y=test, fill=as.factor(passed)))+geom_tile()+scale_fill_manual(values = c("orangered4", "palevioletred"))
ggplot(data=test, aes(x=site, y=test, fill=as.factor(passed)))+geom_tile()+scale_fill_manual(values = c("orangered4", "sienna"))
ggplot(data=test, aes(x=site, y=test, fill=as.factor(passed)))+geom_tile()+scale_fill_manual(values = c("orangered4", "royalblue2"))
ggplot(data=test, aes(x=site, y=test, fill=as.factor(passed)))+geom_tile()+scale_fill_manual(values = c("goldenrod", "sienna"))
ggplot(data=test, aes(x=site, y=test, fill=as.factor(passed)))+geom_tile()+scale_fill_manual(values = c("goldenrod", "paleblue"))
ggplot(data=test, aes(x=site, y=test, fill=as.factor(passed)))+geom_tile()+scale_fill_manual(values = c("goldenrod", "skkyblue"))
ggplot(data=test, aes(x=site, y=test, fill=as.factor(passed)))+geom_tile()+scale_fill_manual(values = c("goldenrod", "skyblue"))
ggplot(data=test, aes(x=site, y=test, fill=as.factor(passed)))+geom_tile()+scale_fill_manual(values = c("goldenrod", "skyblue"))+theme_light()
ggplot(data=test, aes(x=site, y=test, fill=as.factor(passed)))+geom_tile()+scale_fill_manual(values = c("goldenrod", "skyblue"))+theme_minimal()
library(ggplot2)
ggplot(data=test, aes(x=site, y=test, fill=as.factor(passed)))+
ggplot(data=test, aes(x=site, y=test, fill=as.factor(passed)))+
geom_tile()+
scale_fill_manual(values = c("goldenrod", "skyblue"))+
theme_minimal()+
theme(axis.text.x = element_text( angle= 90)
ggplot(data=test, aes(x=site, y=test, fill=as.factor(passed)))+
geom_tile()+
scale_fill_manual(values = c("goldenrod", "skyblue"))+
theme_minimal()+
theme(axis.text.x = element_text( angle= 90))
ggplot(data=test, aes(x=site, y=test, fill=as.factor(passed)))+
geom_tile()+
scale_fill_manual(values = c("thistle", "skyblue"))+
theme_minimal()+
theme(axis.text.x = element_text( angle= 90))
ggplot(data=test, aes(x=site, y=test, fill=as.factor(passed)))+
geom_tile()+
scale_fill_manual(values = c("wheat", "skyblue"))+
theme_minimal()+
theme(axis.text.x = element_text( angle= 90))
test$site=unlist(lapply(test$site, function(x) paste0(Noble::tis_site_config$Domain[Noble::tis_site_config$SiteID==x], "-", x)))
test$site=factor(test$site, levels=order(test$site))
ggplot(data=test, aes(x=site, y=test, fill=as.factor(passed)))+
geom_tile()+
scale_fill_manual(values = c("wheat", "skyblue"))+
theme_minimal()+
theme(axis.text.x = element_text( angle= 90))
test$site=factor(test$site, levels=order(test$site))
ggplot(data=test, aes(x=site, y=test, fill=as.factor(passed)))+
geom_tile()+
scale_fill_manual(values = c("wheat", "skyblue"))+
theme_minimal()+
theme(axis.text.x = element_text( angle= 90))
test=read.csv(file="~/Desktop/pq_tests/all_tests.csv", stringsAsFactors = F)
test$site=unlist(lapply(test$site, function(x) paste0(Noble::tis_site_config$Domain[Noble::tis_site_config$SiteID==x], "-", x)))
ggplot(data=test, aes(x=site, y=test, fill=as.factor(passed)))+
geom_tile()+
scale_fill_manual(values = c("wheat", "skyblue"))+
theme_minimal()+
theme(axis.text.x = element_text( angle= 90))
library(Noble)
