}
# should not need to edit these...
myTitle <- paste("TIS Commissioning Test Report:", test, "Assessment")
rmdFile <- paste( testSubDir, ".Rmd", sep="")
testFullDir <- paste(dirCommBase, testSubDir, sep="")
### General Params
bgn.month = "2017-09"
end.month = "2017-10"
test.sites=
test.sites=c("OSBS", "KONZ", "CPER", "SRER", "UNDE", "CLBJ", "JERC", "BART", "DEJU")
if(file.exists(paste0(testFullDir,"/Common/summary_results.csv"))){
summary_results=read.csv(paste0(testFullDir, "/Common/summary_results.csv"))
passed.sites=summary_results$site[as.logical(summary_results$passed)]
}else{passed.sites=c()}
## NO TESTS ##
#test.sites=c("JERC")
for(i in 1:length(test.sites)){
sink<-try(
Noble::soni.pq.test(site=test.sites[i], bgn.month=bgn.month, end.month=end.month, save.dir=testFullDir, v.th = 80)
)
}
sink<-try(
Noble::soni.pq.test(site="LAJA", bgn.month="2017-08", end.month="2017-09", save.dir=testFullDir, v.th = 80))
parsed.results=Noble::parse.results(test.dir = testFullDir, write.summary = T)
read.csv(file = "/Volumes/neon/Science/Science Commissioning Archive/SiteAndPayload/Tis3DWindSpeedProcessQuality/D10-CPER/CPER_2017-10_DP4.00200.001.zip")
read.csv(file = "/Volumes/neon/Science/Science Commissioning Archive/SiteAndPayload/Tis3DWindSpeedProcessQuality/D10-CPER/soni_CPER_2017-09-01-2017-09-30.csv")
soni-data=read.csv(file = "/Volumes/neon/Science/Science Commissioning Archive/SiteAndPayload/Tis3DWindSpeedProcessQuality/D10-CPER/soni_CPER_2017-09-01-2017-09-30.csv")
soni.data=read.csv(file = "/Volumes/neon/Science/Science Commissioning Archive/SiteAndPayload/Tis3DWindSpeedProcessQuality/D10-CPER/soni_CPER_2017-09-01-2017-09-30.csv")
plot.data=data.frame(time=soni.data$timeBgn, numPts=soni.data$numSamp.veloZaxsErth, qf=soni.data$qfFinl.angZaxsErth)
soni.data=read.csv(file = "/Volumes/neon/Science/Science Commissioning Archive/SiteAndPayload/Tis3DWindSpeedProcessQuality/D10-CPER/soni_CPER_2017-09-01-2017-09-30.csv")
plot.data=data.frame(time=soni.data$timeBgn, numPts=soni.data$numSamp.veloZaxsErth, qf=soni.data$qfFinl.angZaxsErth)
plot.data=data.frame(time=soni.data$timeBgn, numPts=soni.data$numSamp.veloZaxsErth, qf=soni.data$qfFinl.angZaxsErth)
m.plot=melt(data=plot.data, id.vars=time)
m.plot=melt(data=plot.data, id.vars=time)
m.plot
m.plot=melt(data=plot.data, id.vars=time)
m.plot=melt(data=plot.data, id.vars="time")
m.plot
m.plot$time=as.POSIXct(gsub(m.plot$time, pattern = "T|Z", replacement = ""), format=)
m.plot$time
m.plot$time=as.POSIXct(gsub(m.plot$time, pattern = "T|Z", replacement = ""), tz="UTC")
ggplot(data=m.plot, aes(x=time, y=value, group=as.factor(variable)))+geom_point()
ggplot(data=m.plot, aes(x=time, y=value, group=as.factor(variable)))+geom_point(aes(color=group))
ggplot(data=m.plot, aes(x=time, y=value, group=as.factor(variable), color=as.factor(variable)))+geom_point(aes(color=group))
ggplot(data=m.plot, aes(x=time, y=value, group=as.factor(variable), color=as.factor(variable)))+geom_point()
m.plot=melt(data=plot.data, id.vars=c("time", "qf"))
m.plot$time=as.POSIXct(gsub(m.plot$time, pattern = "T|Z", replacement = ""), tz="UTC")
ggplot(data=m.plot, aes(x=time, y=value, group=as.factor(variable), color=as.factor(variable)))+geom_point()
ggplot(data=m.plot, aes(x=time, y=value, group=as.factor(qf), color=as.factor(variable)))+geom_point()
ggplot(data=m.plot, aes(x=time, y=value, group=as.factor(qf), color=as.factor(qf)))+geom_point()
ggplot(data=m.plot, aes(x=time, y=value, group=as.factor(qf), color=as.factor(qf)))+geom_point()+scale_fill_manual(values=("blue", "purple"))
ggplot(data=m.plot, aes(x=time, y=value, group=as.factor(qf), color=as.factor(qf)))+geom_point()+scale_fill_manual(values=c("blue", "purple"))
ggplot(data=m.plot, aes(x=time, y=value, group=as.factor(qf), color=as.factor(qf)))+geom_point()+ggplot2::scale_color_manual(values = niceColors, name = "Final Quality Flag", limits=c(0, 1, "NA"))+ggplot2::theme_bw() +
ggplot2::labs(x="Date/Time", y=nameData, title="Number of 3D sonic anemometer data points")
ggplot(data=m.plot, aes(x=time, y=value, group=as.factor(qf), color=as.factor(qf)))+geom_point()+ggplot2::scale_color_manual(values = niceColors, name = "Final Quality Flag", limits=c(0, 1, "NA"))+ggplot2::theme_bw() +
ggplot2::labs(x="Date/Time", y="Number of Measurements", title="Number of 3D sonic anemometer data points")
niceColors<- c("0"="#41f299", "1"="#f25841", "NA"="black")
ggplot(data=m.plot, aes(x=time, y=value, group=as.factor(qf), color=as.factor(qf)))+geom_point()+ggplot2::scale_color_manual(values = niceColors, name = "Final Quality Flag", limits=c(0, 1, "NA"))+ggplot2::theme_bw() +
ggplot2::labs(x="Date/Time", y="Number of Measurements", title="Number of 3D sonic anemometer data points")
test <- "Soil Heat Flux Process Quality"
testSubDir <- "TisSoilHeatFluxProcessQuality"
if(grepl("darwin", version$os))
{
mountPoint<-"/Volumes/neon/" #Mac
}else{
mountPoint<-"N:/" #Windows
}
dirCommBase = paste0(mountPoint, "Science/Science Commissioning Archive/SiteAndPayload/")
test <- "Soil Heat Flux Process Quality"
testSubDir <- "TisSoilHeatFluxProcessQuality"
if(grepl("darwin", version$os))
{
mountPoint<-"/Volumes/neon/" #Mac
}else{
mountPoint<-"N:/" #Windows
}
dirCommBase = paste0(mountPoint, "Science/Science Commissioning Archive/SiteAndPayload/")
test <- "Soil Heat Flux Process Quality"
testSubDir <- "TisSoilHeatFluxProcessQuality"
if(grepl("darwin", version$os))
{
mountPoint<-"/Volumes/neon/" #Mac
}else{
mountPoint<-"N:/" #Windows
}
dirCommBase = paste0(mountPoint, "Science/Science Commissioning Archive/SiteAndPayload/")
# should not need to edit these...
myTitle <- paste("TIS Commissioning Test Report:", test, "Assessment")
rmdFile <- paste( testSubDir, ".Rmd", sep="")
testFullDir <- paste0(dirCommBase, testSubDir,"/")
dir = testFullDir
double_dot=list.files(path=dir, recursive = T, full.names = T, pattern = "\\.\\.")
double_dot
file.remove(double_dot)
double_dot=list.files(path=dir, recursive = T, full.names = T, pattern = "\\.\\.")
double_dot
double_dot=list.files(path=dir, recursive = T, full.names = T, pattern = "00001")
double_dot
file.remove(double_dot)
double_dot=list.files(path=dir, recursive = T, full.names = T, pattern = "DS_Store")
file.remove(double_dot)
double_dot=list.files(path=dir, recursive = T, full.names = T, pattern = "DS_Store", all.files = T)
file.remove(double_dot)
double_dot=list.files(path=dir, recursive = T, full.names = T, pattern = "00040", all.files = T)
double_dot
double_dot=list.files(path=dir, recursive = T, full.names = T, pattern = ".csv$", all.files = T)
double_dot
file.remove(double_dot[3])
ERlist <- as.data.frame(rbind(
"name1" = c("name"="https://github.com/NEONScience/Noble - Github repository for the Noble software package used in this test to automate accessing data from the NEON data portal.")
# any additional documents...
))
ERlist <- cbind(ERlist,
"ref"= paste("ER[",
formatC(1:nrow(ERlist), width=2, flag="0"),
"]",
sep="")
)
ERref["name1"]
ERList
ERlist
ERlist$ref["name1"]
ERlist$ref[name1]
class(ERlist)
ERlist$ref
# Documents will be assigned an ER[##] in the order they are listed
# To reference these documents in text, use this: `r ERref("key")` where key is e.g. "name1"
options(stringsAsFactors = F)
ERlist <- as.data.frame(rbind(
"name1" = c("name"="https://github.com/NEONScience/Noble - Github repository for the Noble software package used in this test to automate accessing data from the NEON data portal.")
# any additional documents...
))
ERlist <- cbind(ERlist,
"ref"= paste("ER[",
formatC(1:nrow(ERlist), width=2, flag="0"),
"]",
sep="")
)
ERlist
ERlist$ref
rownames(ERlist)
ERlist$ref["name1"]
ERlist$ref[1]
akima::bilinear.grid(x=seq(151), y=seq(151), rmat, nx = 151, ny = 151)
akima::bilinear.grid(x=seq(151), y=seq(151), flux, nx = 151, ny = 151)
dpID="DP1.00002.001"
save.dir="~/Desktop/"
site="CPER"
pri.var="windDir"
install.packages(file.choose(), repos = NULL, type="source")
install.packages(c("RNRCS", "hellno"))
library(Noble)
Noble::tis_site_config
require(zoo)
require(ggplot2)
if(missing(pri.var)){
pri.var=Noble::tis_pri_vars$data.field[Noble::tis_pri_vars$dpID==dpID]
}
var.name=gsub(pattern = "mean", replacement = "", x = pri.var, ignore.case = T)
dp.avail = Noble::NEON.avail(dpID = dpID)
dp.avail = cbind(Month=dp.avail[,1],  dp.avail[,which(colnames(dp.avail) %in% Noble::tis_site_config$SiteID)])
if(missing(site)){
dp.sites = colnames(dp.avail[,2:length(colnames(dp.avail))])
#dp.sites = dp.sites[which(dp.sites %in% Noble::tis_site_config$SiteID)]
}else{
dp.sites=site
}
dp.sites
i=1
health.data=Noble::health.data(site = dp.sites[i], dpID = dpID)
health.data$Month=as.Date(paste0(health.data$Month, "-01"))
health.data$Month=as.Date(paste0(health.data$Month, "-01"))
melt.health=reshape2::melt(data=health.data, id.vars="Month")
plot=ggplot2::ggplot(data=melt.health, ggplot2::aes(x = Month, y = value))+
ggplot2::geom_col(ggplot2::aes(fill=variable), position = ggplot2::position_identity())+
ggplot2::scale_fill_manual(values = c("#062372", "#5483c4"), name="Metric")+ # Availability then Validity
ggplot2::theme_bw()+
ggplot2::scale_x_date(date_breaks = "1 month", date_labels = "%b %Y")+
ggplot2::scale_y_continuous(limits = c(0,100), breaks = c(0, 10, 20, 30, 40, 50, 60, 70, 80, 90, 100))+
ggplot2::ylab("Percent")+
ggplot2::ggtitle(label = dp.sites[i], subtitle = paste0("Using '", pri.var, "' as data column"))+
ggplot2::theme(axis.text.x = element_text(angle = 90, hjust = 1))+
ggplot2::geom_hline(yintercept = 90, color="#a02c46", show.legend = T)
plot
plot=ggplot2::ggplot(data=melt.health, ggplot2::aes(x = Month, y = value))+
ggplot2::geom_col(ggplot2::aes(fill=variable), position = ggplot2::position_dodge(width=0.5))+
ggplot2::scale_fill_manual(values = c("#062372", "#5483c4"), name="Metric")+ # Availability then Validity
ggplot2::theme_bw()+
ggplot2::scale_x_date(date_breaks = "1 month", date_labels = "%b %Y")+
ggplot2::scale_y_continuous(limits = c(0,100), breaks = c(0, 10, 20, 30, 40, 50, 60, 70, 80, 90, 100))+
ggplot2::ylab("Percent")+
ggplot2::ggtitle(label = dp.sites[i], subtitle = paste0("Using '", pri.var, "' as data column"))+
ggplot2::theme(axis.text.x = element_text(angle = 90, hjust = 1))+
ggplot2::geom_hline(yintercept = 90, color="#a02c46", show.legend = T)
plot
plot=ggplot2::ggplot(data=melt.health, ggplot2::aes(x = Month, y = value))+
ggplot2::geom_col(ggplot2::aes(fill=variable), position = ggplot2::position_dodge())+
ggplot2::scale_fill_manual(values = c("#062372", "#5483c4"), name="Metric")+ # Availability then Validity
ggplot2::theme_bw()+
ggplot2::scale_x_date(date_breaks = "1 month", date_labels = "%b %Y")+
ggplot2::scale_y_continuous(limits = c(0,100), breaks = c(0, 10, 20, 30, 40, 50, 60, 70, 80, 90, 100))+
ggplot2::ylab("Percent")+
ggplot2::ggtitle(label = dp.sites[i], subtitle = paste0("Using '", pri.var, "' as data column"))+
ggplot2::theme(axis.text.x = element_text(angle = 90, hjust = 1))+
ggplot2::geom_hline(yintercept = 90, color="#a02c46", show.legend = T)
plot
?position_identity
plot=ggplot2::ggplot(data=melt.health, ggplot2::aes(x = Month, y = value))+
ggplot2::geom_col(ggplot2::aes(fill=variable))+
ggplot2::scale_fill_manual(values = c("#062372", "#5483c4"), name="Metric")+ # Availability then Validity
ggplot2::theme_bw()+
ggplot2::scale_x_date(date_breaks = "1 month", date_labels = "%b %Y")+
ggplot2::scale_y_continuous(limits = c(0,100), breaks = c(0, 10, 20, 30, 40, 50, 60, 70, 80, 90, 100))+
ggplot2::ylab("Percent")+
ggplot2::ggtitle(label = dp.sites[i], subtitle = paste0("Using '", pri.var, "' as data column"))+
ggplot2::theme(axis.text.x = element_text(angle = 90, hjust = 1))+
ggplot2::geom_hline(yintercept = 90, color="#a02c46", show.legend = T)
plot
plot=ggplot2::ggplot(data=melt.health, ggplot2::aes(x = Month, y = value))+
ggplot2::geom_col(ggplot2::aes(fill=variable), position = ggplot2::position_dodge())+
ggplot2::scale_fill_manual(values = c("#062372", "#5483c4"), name="Metric")+ # Availability then Validity
ggplot2::theme_bw()+
ggplot2::scale_x_date(date_breaks = "1 month", date_labels = "%b %Y")+
ggplot2::scale_y_continuous(limits = c(0,100), breaks = c(0, 10, 20, 30, 40, 50, 60, 70, 80, 90, 100))+
ggplot2::ylab("Percent")+
ggplot2::ggtitle(label = dp.sites[i], subtitle = paste0("Using '", pri.var, "' as data column"))+
ggplot2::theme(axis.text.x = element_text(angle = 90, hjust = 1))+
ggplot2::geom_hline(yintercept = 90, color="#a02c46", show.legend = T)
plot=ggplot2::ggplot(data=melt.health, ggplot2::aes(x = Month, y = value))+
ggplot2::geom_col(ggplot2::aes(fill=variable), position = ggplot2::position_dodge(width = 2))+
ggplot2::scale_fill_manual(values = c("#062372", "#5483c4"), name="Metric")+ # Availability then Validity
ggplot2::theme_bw()+
ggplot2::scale_x_date(date_breaks = "1 month", date_labels = "%b %Y")+
ggplot2::scale_y_continuous(limits = c(0,100), breaks = c(0, 10, 20, 30, 40, 50, 60, 70, 80, 90, 100))+
ggplot2::ylab("Percent")+
ggplot2::ggtitle(label = dp.sites[i], subtitle = paste0("Using '", pri.var, "' as data column"))+
ggplot2::theme(axis.text.x = element_text(angle = 90, hjust = 1))+
ggplot2::geom_hline(yintercept = 90, color="#a02c46", show.legend = T)
plot
plot=ggplot2::ggplot(data=melt.health, ggplot2::aes(x = Month, y = value))+
ggplot2::geom_col(ggplot2::aes(fill=variable), position = ggplot2::position_dodge(width = 30))+
ggplot2::scale_fill_manual(values = c("#062372", "#5483c4"), name="Metric")+ # Availability then Validity
ggplot2::theme_bw()+
ggplot2::scale_x_date(date_breaks = "1 month", date_labels = "%b %Y")+
ggplot2::scale_y_continuous(limits = c(0,100), breaks = c(0, 10, 20, 30, 40, 50, 60, 70, 80, 90, 100))+
ggplot2::ylab("Percent")+
ggplot2::ggtitle(label = dp.sites[i], subtitle = paste0("Using '", pri.var, "' as data column"))+
ggplot2::theme(axis.text.x = element_text(angle = 90, hjust = 1))+
ggplot2::geom_hline(yintercept = 90, color="#a02c46", show.legend = T)
plot
plot=ggplot2::ggplot(data=melt.health, ggplot2::aes(x = Month, y = value))+
ggplot2::geom_col(ggplot2::aes(fill=variable), position = ggplot2::position_dodge(width = 50))+
ggplot2::scale_fill_manual(values = c("#062372", "#5483c4"), name="Metric")+ # Availability then Validity
ggplot2::theme_bw()+
ggplot2::scale_x_date(date_breaks = "1 month", date_labels = "%b %Y")+
ggplot2::scale_y_continuous(limits = c(0,100), breaks = c(0, 10, 20, 30, 40, 50, 60, 70, 80, 90, 100))+
ggplot2::ylab("Percent")+
ggplot2::ggtitle(label = dp.sites[i], subtitle = paste0("Using '", pri.var, "' as data column"))+
ggplot2::theme(axis.text.x = element_text(angle = 90, hjust = 1))+
ggplot2::geom_hline(yintercept = 90, color="#a02c46", show.legend = T)
plot
plot=ggplot2::ggplot(data=melt.health, ggplot2::aes(x = Month, y = value))+
ggplot2::geom_col(ggplot2::aes(fill=variable))+
ggplot2::scale_fill_manual(values = c("#062372", "#5483c4"), name="Metric")+ # Availability then Validity
ggplot2::theme_bw()+
ggplot2::scale_x_date(date_breaks = "1 month", date_labels = "%b %Y")+
ggplot2::scale_y_continuous(limits = c(0,100), breaks = c(0, 10, 20, 30, 40, 50, 60, 70, 80, 90, 100))+
ggplot2::ylab("Percent")+
ggplot2::ggtitle(label = dp.sites[i], subtitle = paste0("Using '", pri.var, "' as data column"))+
ggplot2::theme(axis.text.x = element_text(angle = 90, hjust = 1))+
ggplot2::geom_hline(yintercept = 90, color="#a02c46", show.legend = T)
plot
plot=ggplot2::ggplot(data=melt.health, ggplot2::aes(x = Month, y = value))+
ggplot2::geom_col(ggplot2::aes(fill=variable), position = ggplot2::position_dodge())+
ggplot2::scale_fill_manual(values = c("#062372", "#5483c4"), name="Metric")+ # Availability then Validity
ggplot2::theme_bw()+
ggplot2::scale_x_date(date_breaks = "1 month", date_labels = "%b %Y")+
ggplot2::scale_y_continuous(limits = c(0,100), breaks = c(0, 10, 20, 30, 40, 50, 60, 70, 80, 90, 100))+
ggplot2::ylab("Percent")+
ggplot2::ggtitle(label = dp.sites[i], subtitle = paste0("Using '", pri.var, "' as data column"))+
ggplot2::theme(axis.text.x = element_text(angle = 90, hjust = 1))+
ggplot2::geom_hline(yintercept = 90, color="#a02c46", show.legend = T)
plot
gplot2::ggplot(data=melt.health, ggplot2::aes(x = Month, y = value))+
ggplot2::geom_col(ggplot2::aes(fill=variable),width = 5, position = ggplot2::position_dodge(width = 4))+
ggplot2::scale_fill_manual(values = c("#062372", "#5483c4"), name="Metric")+ # Availability then Validity
ggplot2::theme_bw()+
ggplot2::scale_x_date(date_breaks = "1 month", date_labels = "%b %Y")+
ggplot2::scale_y_continuous(limits = c(0,100), breaks = c(0, 10, 20, 30, 40, 50, 60, 70, 80, 90, 100))+
ggplot2::ylab("Percent")+
ggplot2::ggtitle(label = dp.sites[i], subtitle = paste0("Using '", pri.var, "' as data column"))+
ggplot2::theme(axis.text.x = element_text(angle = 90, hjust = 1))+
ggplot2::geom_hline(yintercept = 90, color="#a02c46", show.legend = T)
plot=ggplot2::ggplot(data=melt.health, ggplot2::aes(x = Month, y = value))+
ggplot2::geom_col(ggplot2::aes(fill=variable), position = ggplot2::position_dodge())+
ggplot2::scale_fill_manual(values = c("#062372", "#5483c4"), name="Metric")+ # Availability then Validity
ggplot2::theme_bw()+
ggplot2::scale_x_date(date_breaks = "1 month", date_labels = "%b %Y")+
ggplot2::scale_y_continuous(limits = c(0,100), breaks = c(0, 10, 20, 30, 40, 50, 60, 70, 80, 90, 100))+
ggplot2::ylab("Percent")+
ggplot2::ggtitle(label = dp.sites[i], subtitle = paste0("Using '", pri.var, "' as data column"))+
ggplot2::theme(axis.text.x = element_text(angle = 90, hjust = 1))+
ggplot2::geom_hline(yintercept = 90, color="#a02c46", show.legend = T)
plot=ggplot2::ggplot(data=melt.health, ggplot2::aes(x = Month, y = value))+
ggplot2::geom_col(ggplot2::aes(fill=variable), width=5, position = ggplot2::position_dodge(width = 4))+
ggplot2::scale_fill_manual(values = c("#062372", "#5483c4"), name="Metric")+ # Availability then Validity
ggplot2::theme_bw()+
ggplot2::scale_x_date(date_breaks = "1 month", date_labels = "%b %Y")+
ggplot2::scale_y_continuous(limits = c(0,100), breaks = c(0, 10, 20, 30, 40, 50, 60, 70, 80, 90, 100))+
ggplot2::ylab("Percent")+
ggplot2::ggtitle(label = dp.sites[i], subtitle = paste0("Using '", pri.var, "' as data column"))+
ggplot2::theme(axis.text.x = element_text(angle = 90, hjust = 1))+
ggplot2::geom_hline(yintercept = 90, color="#a02c46", show.legend = T)
plot
plot=ggplot2::ggplot(data=melt.health, ggplot2::aes(x = Month, y = value))+
ggplot2::geom_col(ggplot2::aes(fill=variable), width=50, position = ggplot2::position_dodge(width = 40))+
ggplot2::scale_fill_manual(values = c("#062372", "#5483c4"), name="Metric")+ # Availability then Validity
ggplot2::theme_bw()+
ggplot2::scale_x_date(date_breaks = "1 month", date_labels = "%b %Y")+
ggplot2::scale_y_continuous(limits = c(0,100), breaks = c(0, 10, 20, 30, 40, 50, 60, 70, 80, 90, 100))+
ggplot2::ylab("Percent")+
ggplot2::ggtitle(label = dp.sites[i], subtitle = paste0("Using '", pri.var, "' as data column"))+
ggplot2::theme(axis.text.x = element_text(angle = 90, hjust = 1))+
ggplot2::geom_hline(yintercept = 90, color="#a02c46", show.legend = T)
ggplot2::ggplot(data=melt.health, ggplot2::aes(x = Month, y = value))+
ggplot2::geom_col(ggplot2::aes(fill=variable), width=50, position = ggplot2::position_dodge(width = 40))+
ggplot2::scale_fill_manual(values = c("#062372", "#5483c4"), name="Metric")+ # Availability then Validity
ggplot2::theme_bw()+
ggplot2::scale_x_date(date_breaks = "1 month", date_labels = "%b %Y")+
ggplot2::scale_y_continuous(limits = c(0,100), breaks = c(0, 10, 20, 30, 40, 50, 60, 70, 80, 90, 100))+
ggplot2::ylab("Percent")+
ggplot2::ggtitle(label = dp.sites[i], subtitle = paste0("Using '", pri.var, "' as data column"))+
ggplot2::theme(axis.text.x = element_text(angle = 90, hjust = 1))+
ggplot2::geom_hline(yintercept = 90, color="#a02c46", show.legend = T)
ggplot2::ggplot(data=melt.health, ggplot2::aes(x = Month, y = value))+
ggplot2::geom_col(ggplot2::aes(fill=variable), width=50, position = ggplot2::position_dodge(width = 50))+
ggplot2::scale_fill_manual(values = c("#062372", "#5483c4"), name="Metric")+ # Availability then Validity
ggplot2::theme_bw()+
ggplot2::scale_x_date(date_breaks = "1 month", date_labels = "%b %Y")+
ggplot2::scale_y_continuous(limits = c(0,100), breaks = c(0, 10, 20, 30, 40, 50, 60, 70, 80, 90, 100))+
ggplot2::ylab("Percent")+
ggplot2::ggtitle(label = dp.sites[i], subtitle = paste0("Using '", pri.var, "' as data column"))+
ggplot2::theme(axis.text.x = element_text(angle = 90, hjust = 1))+
ggplot2::geom_hline(yintercept = 90, color="#a02c46", show.legend = T)
ggplot2::ggplot(data=melt.health, ggplot2::aes(x = Month, y = value))+
ggplot2::geom_col(ggplot2::aes(fill=variable), width=500, position = ggplot2::position_dodge(width = 50))+
ggplot2::scale_fill_manual(values = c("#062372", "#5483c4"), name="Metric")+ # Availability then Validity
ggplot2::theme_bw()+
ggplot2::scale_x_date(date_breaks = "1 month", date_labels = "%b %Y")+
ggplot2::scale_y_continuous(limits = c(0,100), breaks = c(0, 10, 20, 30, 40, 50, 60, 70, 80, 90, 100))+
ggplot2::ylab("Percent")+
ggplot2::ggtitle(label = dp.sites[i], subtitle = paste0("Using '", pri.var, "' as data column"))+
ggplot2::theme(axis.text.x = element_text(angle = 90, hjust = 1))+
ggplot2::geom_hline(yintercept = 90, color="#a02c46", show.legend = T)
ggplot2::ggplot(data=melt.health, ggplot2::aes(x = Month, y = value))+
ggplot2::geom_col(ggplot2::aes(fill=variable), width=10, position = ggplot2::position_dodge(width = 50))+
ggplot2::scale_fill_manual(values = c("#062372", "#5483c4"), name="Metric")+ # Availability then Validity
ggplot2::theme_bw()+
ggplot2::scale_x_date(date_breaks = "1 month", date_labels = "%b %Y")+
ggplot2::scale_y_continuous(limits = c(0,100), breaks = c(0, 10, 20, 30, 40, 50, 60, 70, 80, 90, 100))+
ggplot2::ylab("Percent")+
ggplot2::ggtitle(label = dp.sites[i], subtitle = paste0("Using '", pri.var, "' as data column"))+
ggplot2::theme(axis.text.x = element_text(angle = 90, hjust = 1))+
ggplot2::geom_hline(yintercept = 90, color="#a02c46", show.legend = T)
ggplot2::ggplot(data=melt.health, ggplot2::aes(x = Month, y = value))+
ggplot2::geom_col(ggplot2::aes(fill=variable),  position = ggplot2::position_dodge())+
ggplot2::scale_fill_manual(values = c("#062372", "#5483c4"), name="Metric")+ # Availability then Validity
ggplot2::theme_bw()+
ggplot2::scale_x_date(date_breaks = "1 month", date_labels = "%b %Y")+
ggplot2::scale_y_continuous(limits = c(0,100), breaks = c(0, 10, 20, 30, 40, 50, 60, 70, 80, 90, 100))+
ggplot2::ylab("Percent")+
ggplot2::ggtitle(label = dp.sites[i], subtitle = paste0("Using '", pri.var, "' as data column"))+
ggplot2::theme(axis.text.x = element_text(angle = 90, hjust = 1))+
ggplot2::geom_hline(yintercept = 90, color="#a02c46", show.legend = T)
ggplot2::ggplot(data=melt.health, ggplot2::aes(x = Month, y = value))+
ggplot2::geom_col(ggplot2::aes(fill=variable))+
ggplot2::scale_fill_manual(values = c("#76e56b", "#e5826b"), name="Metric")+ # Availability then Validity
ggplot2::theme_bw()+
ggplot2::scale_x_date(date_breaks = "1 month", date_labels = "%b %Y")+
ggplot2::scale_y_continuous(limits = c(0,100), breaks = c(0, 10, 20, 30, 40, 50, 60, 70, 80, 90, 100))+
ggplot2::ylab("Percent")+
ggplot2::ggtitle(label = dp.sites[i], subtitle = paste0("Using '", pri.var, "' as data column"))+
ggplot2::theme(axis.text.x = element_text(angle = 90, hjust = 1))+
ggplot2::geom_hline(yintercept = 90, color="#a02c46", show.legend = T)
plot=ggplot2::ggplot(data=melt.health, ggplot2::aes(x = Month, y = value))+
ggplot2::geom_col(ggplot2::aes(fill=variable))+
ggplot2::scale_fill_manual(values = c("#76e56b", "#6bcfe5"), name="Metric")+ # Availability then Validity
ggplot2::theme_bw()+
ggplot2::scale_x_date(date_breaks = "1 month", date_labels = "%b %Y")+
ggplot2::scale_y_continuous(limits = c(0,100), breaks = c(0, 10, 20, 30, 40, 50, 60, 70, 80, 90, 100))+
ggplot2::ylab("Percent")+
ggplot2::ggtitle(label = dp.sites[i], subtitle = paste0("Using '", pri.var, "' as data column"))+
ggplot2::theme(axis.text.x = element_text(angle = 90, hjust = 1))+
ggplot2::geom_hline(yintercept = 90, color="#a02c46", show.legend = T)
plot=ggplot2::ggplot(data=melt.health, ggplot2::aes(x = Month, y = value))+
ggplot2::geom_col(ggplot2::aes(fill=variable), position = ggplot2::position_dodge())+
ggplot2::scale_fill_manual(values = c("#76e56b", "#6bcfe5"), name="Metric")+ # Availability then Validity
ggplot2::theme_bw()+
ggplot2::scale_x_date(date_breaks = "1 month", date_labels = "%b %Y")+
ggplot2::scale_y_continuous(limits = c(0,100), breaks = c(0, 10, 20, 30, 40, 50, 60, 70, 80, 90, 100))+
ggplot2::ylab("Percent")+
ggplot2::ggtitle(label = dp.sites[i], subtitle = paste0("Using '", pri.var, "' as data column"))+
ggplot2::theme(axis.text.x = element_text(angle = 90, hjust = 1))+
ggplot2::geom_hline(yintercept = 90, color="#a02c46", show.legend = T)
plot
ggplot2::ggplot(data=melt.health, ggplot2::aes(x = Month, y = value))+
ggplot2::geom_col(ggplot2::aes(fill=variable), position = ggplot2::position_dodge())+
ggplot2::scale_fill_manual(values = c("#e5ae6b", "#6bcfe5"), name="Metric")+ # Availability then Validity
ggplot2::theme_bw()+
ggplot2::scale_x_date(date_breaks = "1 month", date_labels = "%b %Y")+
ggplot2::scale_y_continuous(limits = c(0,100), breaks = c(0, 10, 20, 30, 40, 50, 60, 70, 80, 90, 100))+
ggplot2::ylab("Percent")+
ggplot2::ggtitle(label = dp.sites[i], subtitle = paste0("Using '", pri.var, "' as data column"))+
ggplot2::theme(axis.text.x = element_text(angle = 90, hjust = 1))+
ggplot2::geom_hline(yintercept = 90, color="#a02c46", show.legend = T)
plot=ggplot2::ggplot(data=melt.health, ggplot2::aes(x = Month, y = value))+
ggplot2::geom_col(ggplot2::aes(fill=variable), position = ggplot2::position_dodge())+
ggplot2::scale_fill_manual(values = c("#e03a3a", "#3a3ae0"), name="Metric")+ # Availability then Validity
ggplot2::theme_bw()+
ggplot2::scale_x_date(date_breaks = "1 month", date_labels = "%b %Y")+
ggplot2::scale_y_continuous(limits = c(0,100), breaks = c(0, 10, 20, 30, 40, 50, 60, 70, 80, 90, 100))+
ggplot2::ylab("Percent")+
ggplot2::ggtitle(label = dp.sites[i], subtitle = paste0("Using '", pri.var, "' as data column"))+
ggplot2::theme(axis.text.x = element_text(angle = 90, hjust = 1))+
ggplot2::geom_hline(yintercept = 90, color="#a02c46", show.legend = T)
plot
plot=ggplot2::ggplot(data=melt.health, ggplot2::aes(x = Month, y = value))+
ggplot2::geom_col(ggplot2::aes(fill=variable), position = ggplot2::position_dodge())+
ggplot2::scale_fill_manual(values = c("#e03a3a", "#e0b31f"), name="Metric")+ # Availability then Validity
ggplot2::theme_bw()+
ggplot2::scale_x_date(date_breaks = "1 month", date_labels = "%b %Y")+
ggplot2::scale_y_continuous(limits = c(0,100), breaks = c(0, 10, 20, 30, 40, 50, 60, 70, 80, 90, 100))+
ggplot2::ylab("Percent")+
ggplot2::ggtitle(label = dp.sites[i], subtitle = paste0("Using '", pri.var, "' as data column"))+
ggplot2::theme(axis.text.x = element_text(angle = 90, hjust = 1))+
ggplot2::geom_hline(yintercept = 90, color="#a02c46", show.legend = T)
plot
plot=ggplot2::ggplot(data=melt.health, ggplot2::aes(x = Month, y = value))+
ggplot2::geom_col(ggplot2::aes(fill=variable), position = ggplot2::position_dodge())+
ggplot2::scale_fill_manual(values = c("#00ad68", "#149367"), name="Metric")+ # Availability then Validity
ggplot2::theme_bw()+
ggplot2::scale_x_date(date_breaks = "1 month", date_labels = "%b %Y")+
ggplot2::scale_y_continuous(limits = c(0,100), breaks = c(0, 10, 20, 30, 40, 50, 60, 70, 80, 90, 100))+
ggplot2::ylab("Percent")+
ggplot2::ggtitle(label = dp.sites[i], subtitle = paste0("Using '", pri.var, "' as data column"))+
ggplot2::theme(axis.text.x = element_text(angle = 90, hjust = 1))+
ggplot2::geom_hline(yintercept = 90, color="#a02c46", show.legend = T)
plot
plot=ggplot2::ggplot(data=melt.health, ggplot2::aes(x = Month, y = value))+
ggplot2::geom_col(ggplot2::aes(fill=variable), position = ggplot2::position_dodge())+
ggplot2::scale_fill_manual(values = c("#3baa43", "#149367"), name="Metric")+ # Availability then Validity
ggplot2::theme_bw()+
ggplot2::scale_x_date(date_breaks = "1 month", date_labels = "%b %Y")+
ggplot2::scale_y_continuous(limits = c(0,100), breaks = c(0, 10, 20, 30, 40, 50, 60, 70, 80, 90, 100))+
ggplot2::ylab("Percent")+
ggplot2::ggtitle(label = dp.sites[i], subtitle = paste0("Using '", pri.var, "' as data column"))+
ggplot2::theme(axis.text.x = element_text(angle = 90, hjust = 1))+
ggplot2::geom_hline(yintercept = 90, color="#a02c46", show.legend = T)
plot
plot=ggplot2::ggplot(data=melt.health, ggplot2::aes(x = Month, y = value))+
ggplot2::geom_col(ggplot2::aes(fill=variable), position = ggplot2::position_dodge())+
ggplot2::scale_fill_manual(values = c("#71d678", "#149367"), name="Metric")+ # Availability then Validity
ggplot2::theme_bw()+
ggplot2::scale_x_date(date_breaks = "1 month", date_labels = "%b %Y")+
ggplot2::scale_y_continuous(limits = c(0,100), breaks = c(0, 10, 20, 30, 40, 50, 60, 70, 80, 90, 100))+
ggplot2::ylab("Percent")+
ggplot2::ggtitle(label = dp.sites[i], subtitle = paste0("Using '", pri.var, "' as data column"))+
ggplot2::theme(axis.text.x = element_text(angle = 90, hjust = 1))+
ggplot2::geom_hline(yintercept = 90, color="#a02c46", show.legend = T)
plot
plot=ggplot2::ggplot(data=melt.health, ggplot2::aes(x = Month, y = value))+
ggplot2::geom_col(ggplot2::aes(fill=variable), position = ggplot2::position_dodge())+
ggplot2::scale_fill_manual(values = c("#71d678", "#127ba5"), name="Metric")+ # Availability then Validity
ggplot2::theme_bw()+
ggplot2::scale_x_date(date_breaks = "1 month", date_labels = "%b %Y")+
ggplot2::scale_y_continuous(limits = c(0,100), breaks = c(0, 10, 20, 30, 40, 50, 60, 70, 80, 90, 100))+
ggplot2::ylab("Percent")+
ggplot2::ggtitle(label = dp.sites[i], subtitle = paste0("Using '", pri.var, "' as data column"))+
ggplot2::theme(axis.text.x = element_text(angle = 90, hjust = 1))+
ggplot2::geom_hline(yintercept = 90, color="#a02c46", show.legend = T)
plot
library(Noble)
Noble::NEON.avail(dpID = dpId)
dpId="DP1.00001.001"
Noble::NEON.avail(dpID = dpIdDd)
Noble::NEON.avail(dpID = dpIdD)
Noble::NEON.avail(dpID = dpID)
sites=test.sites(dpID = dpID, bgn.month = "2018-09", end.month = "2018-10")
test.sites()
dpID="DP1.00001.001"
sites=test.sites(dpID = dpID, bgn.month = "2018-09", end.month = "2018-10")
sites
month=Sys.Date()
month
month=substr(Sys.Date(), start = 1, stop = 7)
month=
month
zoo::as.yearmon(Sys.Date())
zoo::as.yearmon(Sys.Date())-lubridate::months(1)
sink=lapply(sites, function(s) try(Noble::plot.dp.survey(dpID=dpID, save.dir = "~/NEON/Data product health/2D Wind/", site = s, pri.var = "windSpeed")))
Noble::tis.pq.test(site = s, dpID = dpID, prin.vars = c("windSpeedMean", "windDirMean"), bgn.month = "2018-08", end.month = "2018-09", time.agr = 30, package = "basic")
lapply(sites, try(Noble::tis.pq.test(site = s, dpID = dpID, prin.vars = c("windSpeedMean", "windDirMean"), bgn.month = "2018-08", end.month = "2018-09", time.agr = 30, package = "basic", save.dir = "/home/robert/NEON/Data product health/2D Wind/")))
lapply(sites, function(s) try(Noble::tis.pq.test(site = s, dpID = dpID, prin.vars = c("windSpeedMean", "windDirMean"), bgn.month = "2018-08", end.month = "2018-09", time.agr = 30, package = "basic", save.dir = "/home/robert/NEON/Data product health/2D Wind/")))
lapply(sites, function(s) try(Noble::tis.pq.test(site = s, dpID = dpID, prin.vars = c("windSpeed", "windDir"), bgn.month = "2018-08", end.month = "2018-09", time.agr = 30, package = "basic", save.dir = "/home/robert/NEON/Data product health/2D Wind/")))
lapply(sites, function(s) try(Noble::gap.report(site =s, bgn.month = "2018-08", end.month = "2018-09", dpID = dpID, save.dir = "/home/robert/NEON/Data product health/2D Wind/")))
lapply(sites, function(s) try(Noble::gap.vis(site = s, bgn.month = "2018-08", end.month = "2018-09", dpID = dpID,save.dir = save.dir)))
lapply(sites, function(s) try(Noble::gap.vis(site = s, bgn.month = "2018-08", end.month = "2018-09", dpID = dpID,save.dir = save.dir)))
installed.packages(metScanR)
installed.packages("metScanR")
install.packages("metScanR")
install.packages("metScanR")
install.packages("metScanR")
